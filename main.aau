import win.ui;
import inet.url;
import fsys.ini;
import web.form;
import key;
import txkf; //腾讯客服
/*DSG{{*/
var mainForm = ..win.form(text="腾讯客服平台";right=695;bottom=631;border="dialog frame";max=false;parent=...;scroll=1)
mainForm.add(
btn_ignore={cls="button";text="忽略";left=64;top=592;right=128;bottom=626;color=0;font=LOGFONT( name='微软雅黑';h=-14 );z=11};
btn_list={cls="button";text="网页";left=8;top=592;right=56;bottom=626;color=0;font=LOGFONT( name='微软雅黑';h=-14 );z=9};
btn_login={cls="button";text="登录";left=640;top=560;right=688;bottom=584;color=0;font=LOGFONT( name='微软雅黑';h=-14 );z=7};
btn_query={cls="button";text="查询";left=592;top=592;right=688;bottom=626;color=0;font=LOGFONT( name='微软雅黑';h=-16 );z=6};
btn_repeat={cls="button";text="重复回答";left=216;top=592;right=288;bottom=626;color=0;font=LOGFONT( name='微软雅黑';h=-14 );z=10};
btn_reply={cls="button";text="回答 [CTRL+ENTER]";left=296;top=592;right=440;bottom=626;color=0;font=LOGFONT( name='微软雅黑';h=-14 );z=3};
btn_unignore={cls="button";text="重置忽略";left=136;top=592;right=208;bottom=626;color=0;font=LOGFONT( name='微软雅黑';h=-14 );z=12};
cb_app={cls="combobox";text="combobox";left=448;top=592;right=584;bottom=616;border=1;color=0;edge=1;font=LOGFONT( name='微软雅黑';h=-19 );items={};mode="dropdownlist";z=14};
dtp_begin={cls="datetimepick";left=448;top=560;right=536;bottom=584;border=1;color=0;edge=1;font=LOGFONT( name='宋体' );z=4};
dtp_end={cls="datetimepick";left=544;top=560;right=632;bottom=584;border=1;color=0;edge=1;font=LOGFONT( name='宋体' );z=5};
ed_intro={cls="edit";left=8;top=8;right=688;bottom=32;align="center";border=1;color=0;edge=1;font=LOGFONT( name='宋体';h=-14 );multiline=1;z=8};
ed_reply={cls="edit";left=8;top=408;right=440;bottom=584;autohscroll=false;border=1;color=0;edge=1;font=LOGFONT( name='微软雅黑';h=-14 );multiline=1;vscroll=1;z=2};
gb_view={cls="groupbox";left=8;top=40;right=440;bottom=400;color=0;font=LOGFONT( name='微软雅黑';h=-14 );z=1};
lb_essay={cls="listbox";left=448;top=40;right=688;bottom=560;bgcolor=16777215;border=1;color=0;edge=1;font=LOGFONT( name='微软雅黑' );hscroll=1;items={};vscroll=1;z=13}
)
/*}}*/

mixFolder = string.replace(io._exepath,"\.\w*$","") //建立同名目录
if not( fsys.isDir(mixFolder) ){ fsys.createDir(mixFolder) }

/*数据初始化{{*/
debugFunc = loadcode("\res\debug.aau") //DEBUG函数
init = loadcode("\res\initialize.aau") //初始化函数
iniFile = fsys.ini(init("inicfg")) //获取程序配置文件

var viewTemplate = init("viewtpl") //显示工单的样式
var post_argu_table = init("argutbl") //POST参数表
var work_order_table = init("billtbl") //工单数据表

global.biscuit = iniFile.read("share","biscuit") : "cookie:" //请求头
global.debugMode = tonumber( iniFile.read("share","debug","0") ) //是否DEBUG

mainForm.cb_app.items = iniFile.readKeys("appset") //所有APPNAME
init("replycfg",mainForm.cb_app.items) //生成回复模板

var dayGap = tonumber(iniFile.read("share","dateGap","10"))
mainForm.dtp_begin.time = time.now().addday( 0 - dayGap ) //查询的开始时间

mainForm.dtp_begin.setFormat("yyyy'/'MM'/'dd") //日期格式，防止受系统时间格式影响
mainForm.dtp_end.setFormat("yyyy'/'MM'/'dd") //日期格式，防止受系统时间格式影响
/*}}*/

//绑定XX控件的XX属性值到配置文件
import config;
mainForm.bindConfig( config.widget, { //使用widget文件名
	cb_app = "selIndex";
} );

//显示工单的WEB窗体
viewfrm = web.form( mainForm.gb_view )
viewfrm.silent = true; viewfrm.showMenu = function(){return false;}; viewfrm.write("")

//初始、变更回复模板内容
if(mainForm.cb_app.selIndex){ //读取回复模板
	mainForm.lb_essay.items = init("replytpl",mainForm.cb_app.selText)
	global.appid = iniFile.read("appset",mainForm.cb_app.selText,"0") //更新当前APPID
}
mainForm.cb_app.oncommand = function(id,event){
	if(event == 0x1/*_CBN_SELCHANGE*/){
		mainForm.btn_query.text = "查询"
		mainForm.lb_essay.clear() //清空回复模板
		mainForm.lb_essay.items = init("replytpl",mainForm.cb_app.selText)
		global.appid = iniFile.read("appset",mainForm.cb_app.selText,"0") //更新当前APPID
	}
}

//退出程序时记录HEADER
mainForm.wndproc = function(hwnd,message,wParam,lParam){
	select(message) {
		case 0x10/*_WM_CLOSE*/ {
			iniFile.write("share","biscuit",global.biscuit)
		}
	}
}

//打开客服平台主页
mainForm.btn_list.oncommand = function(id,event){
	import process;
	process.execute("http://" + global.appid + ".kf.ieodopen.qq.com/admin/");
}

//打开QQ登录窗口
mainForm.btn_login.oncommand = function(id,event){
	var child,wb = mainForm.loadForm("\res\qqlogin.aau", mainForm /*父窗口*/); 
	child.login(518005201/*,true*/) //认证ID，取自原登录页面
	var qqLoginResult = child.doModal(mainForm)
}

//显示上次回复的内容
mainForm.btn_repeat.oncommand = function(id,event){
	mainForm.ed_reply.text = work_order_table['replyDuplicate']
}

//使用回复模板中的内容
mainForm.lb_essay.wndproc = function(hwnd,message,wParam,lParam){
	select( message ) {
		case 0x203/*_WM_LBUTTONDBLCLK*/ {
			if( mainForm.lb_essay.selText ){
				mainForm.ed_reply.text = "玩家您好！" ++ mainForm.lb_essay.selText
				//mainForm.ed_reply.text += ("玩家您好！" ++ mainForm.lb_essay.selText)
			}
		}
		case 0x206/*_WM_RBUTTONDBLCLK*/ {
			init("edittpl",mainForm.cb_app.selText) //右键双击打开默认程序编辑模板
		}
	}
}

//调用『回复』按钮
mainForm.ed_reply.wndproc = function(hwnd,message,wParam,lParam){
	select(message) {
		case 0x100/*_WM_KEYDOWN*/{
			if( key.getState("CTRL") and key.getState("ENTER") ){
				mainForm.btn_reply.oncommand()
				win.delay(1); mainForm.ed_reply.text = "" //加DELAY是为了能删除"ENTER"字符
			}
			if( key.getState("CTRL") and key.getState("A") ){
				mainForm.ed_reply.selectAll() //全选回复区的内容
			}
		}
	}
}

//重置忽略列表为空
mainForm.btn_unignore.oncommand = function(id,event){
	post_argu_table['sBillId'] = ""; //防止能够点击'忽略'
	work_order_table['ignoreList'] = {};
	mainForm.btn_ignore.text = "忽略"
	mainForm.btn_query.oncommand() //重新查询工单列表
}

//添加当前工单到忽略列表
mainForm.btn_ignore.oncommand = function(id,event){
	var ignore_bill_id = tostring( post_argu_table['sBillId'] )
	if ( #ignore_bill_id and work_order_table['totalBillNumber'] ){
		work_order_table['ignoreList'][ignore_bill_id] = true
		debugFunc( work_order_table['ignoreList'] ) //DEBUG
		mainForm.btn_ignore.text = "忽略[" + table.count(work_order_table['ignoreList']) + "]" //被忽略工单总数
		mainForm.btn_query.oncommand() //重新查询工单列表，可过滤已忽略的工单列表
	}
}

//点击『查询』按钮
mainForm.btn_query.oncommand = function(id,event){
	work_order_table['queryDateTime'] = time.now(); work_order_table['queryDateTime'].format = "[%Y/%m/%d-%H:%M:%S]" //查询时间
	mainForm.text = "腾讯客服平台" + " " + tostring(work_order_table['queryDateTime']) + " " + global.appid
	mainForm.btn_query.text = "查询"
	
	mainForm.btn_query.disabled = true
	debugFunc( query_preproccess() )
	mainForm.ed_reply.setFocus()
	mainForm.btn_query.disabled = false
}
query_preproccess = function(){
	//清空摘要、显示框
	mainForm.ed_intro.text = ""; viewfrm.write("")

	//查询工单，开始日期
	post_argu_table.sSubmitSt = mainForm.dtp_begin.time
	post_argu_table.sSubmitSt.format="%Y-%m-%d"
	post_argu_table.sSubmitSt = tostring( post_argu_table.sSubmitSt )
	//查询工单，结束日期
	post_argu_table.sSubmitEt = mainForm.dtp_end.time
	post_argu_table.sSubmitEt.format="%Y-%m-%d"
	post_argu_table.sSubmitEt = tostring( post_argu_table.sSubmitEt )

	/*{ 取列表最后一页的最后一条工单 }*/
	var last_page_bill_list_return = query_last_page_bill_list()
	debugFunc( last_page_bill_list_return )
	if( last_page_bill_list_return[1] ){
		query_current_page_last_bill()
	}

	return {true; "OK_QUREY"};
}

//点击『回复』按钮
mainForm.btn_reply.oncommand = function(id,event){
	mainForm.btn_reply.disabled = true
	debugFunc( reply_preproccess() )
	mainForm.ed_reply.setFocus()
	mainForm.btn_reply.disabled = false
}
reply_preproccess = function(){
	if not(work_order_table['firstBill']){
		win.msgbox("工单为空，请先查询");
		return {false; "ERR_NO_BILLS"};
	}
	
	//回复当前工单
	work_order_table['replyDuplicate'] = mainForm.ed_reply.text //存入到回复副本
	var reply_content = string.trim( work_order_table['replyDuplicate'] )
	if ( not(#reply_content) and not(win.msgboxTest("不回复任何内容？")) ){
		return {false; "ERR_NULL_REPLY"};
	}
	reply_content = string.fromto(reply_content,0/*CP_ACP*/,65001/*CP_UTF8*/)
	reply_content := "" //防止回复为NULL出错
	reply_content = inet.url.encode(reply_content)
	post_argu_table.sReply = tostring(reply_content);
	debugFunc( post_argu_table.sReply ) //DEBUG
	
	var reply_bill_return  = txkf.reply_bill(post_argu_table) //回复工单
	debugFunc( reply_bill_return ) //DEBUG
	
	table.pop(work_order_table['list']) //删除当前回复的工单
	//清空摘要、回复框、显示框
	mainForm.ed_intro.text = "";
	mainForm.ed_reply.text = "";
	viewfrm.write("")
	work_order_table['totalBillNumber'] -= 1 //未回复工单数量减1条
	mainForm.btn_query.text = "约[" + work_order_table['totalBillNumber'] + "]条"
	
	var query_last_bill_flag = true
	if ( #work_order_table['list'] === 0 ){ //当前页的工单列表为空
		query_last_bill_flag = query_last_page_bill_list()[1] //取工单列表最后一页
	}
	if( query_last_bill_flag ){
		query_current_page_last_bill() //取当前页最后一条工单
	}
	
	return {true; "OK_REPLY"};
}

/*{ 取一页工单列表数据 }*/
query_last_page_bill_list = function(){
	//查询工单，预处理参数
	post_argu_table.iAppid = global.appid
	post_argu_table.pg = 1; post_argu_table.ct = 10; post_argu_table.iScope = 0
	
	//查询工单列表，按默认的倒序方式排序
	var bill_list_table = txkf.unread_list(post_argu_table)
	var errmsg = bill_list_table['resultinfo']['errmsg']
	//if( #errmsg ){ win.msgbox(errmsg); return {false; "ERR:" + errmsg}; }
	if( #errmsg ){
		if(errmsg == "你还没有登录，请先登录"){
			mainForm.btn_login.oncommand() //QQ登录窗口
		}
		else {
			win.msgbox(errmsg)
		};
		return {false; "ERR:" ++ errmsg};
	}

	//查询所有页数的工单列表
	work_order_table['list'] = {}; //重置未回复工单列表
	var total_page = bill_list_table['resultinfo']['obj']['totalpage'] //工单列表页数
	for(current_page=1;total_page;1){
		post_argu_table.pg = current_page
		bill_list_table = txkf.unread_list(post_argu_table) //取某页工单列表的所有数据
		for(bill_position,bill_summary in bill_list_table['resultinfo']['list']){
			if(work_order_table['ignoreList'][bill_summary.sBillId]){ //当前sBillId在ignoreList中
				continue ; //跳到下个循环，该工单不进行回复
			}
			table.push(work_order_table['list'],bill_summary) //得到该页的工单列表
		}
	}
	debugFunc( work_order_table['list'] ) //DEBUG
	
	//平台返回的未回复工单数量
	work_order_table['totalBillNumber'] = bill_list_table['resultinfo']['obj']['total']
	mainForm.btn_query.text = "约[" + work_order_table['totalBillNumber'] + "]条"

	//完成查询，处理后续
	if not( table.count(work_order_table['list']) ){
		return {false; "ERR_IGNORE_BILL"}; //过滤忽略列表后没有工单了
	}
	if (work_order_table['totalBillNumber'] == 0){
		work_order_table['firstBill'] = 0;
		return {false; "ERR_NO_BILLS"}; //平台返回没有工单了
	}
	return {true; "OK_LAST_PAGE_LIST"};
}

/*{ 取当前页最早提问的工单 }*/
query_current_page_last_bill = function(){
	work_order_table['firstBill'] = #work_order_table['list'] //总工单数，即为最早那条工单的位置
	work_order_table['current'] = work_order_table['list'][work_order_table.firstBill]
	debugFunc( work_order_table['current'] ) //DEBUG
	
	//查询预处理
	post_argu_table.iMutex = 1
	post_argu_table.sOpenId = work_order_table.current['sOpenId']
	post_argu_table.sBillId = work_order_table.current['sBillId']
	post_argu_table.iSessionId = work_order_table.current['iSessionId']
	
	//取当前工单的具体内容
	work_order_table['content'] = txkf.open_bill(post_argu_table)
	debugFunc( work_order_table['content'] ) //DEBUG
	
	//显示工单摘要
	var bill_intro = work_order_table.content['resultinfo']['list'][1]
	mainForm.ed_intro.text = bill_intro['dtCreateTime']
	mainForm.ed_intro.text += " | "
	mainForm.ed_intro.text += work_order_table.current['sType']
	mainForm.ed_intro.text += " | "
	mainForm.ed_intro.text += bill_intro['sOpenId']
	
	//工单标题
	var question_sTitle = string.trim( bill_intro['sTitle'] )
	question_sTitle = string.replace(init("viewtpl"),"<{#REPLACEMENT#}>",question_sTitle)
	//工单文本描述
	var question_sArticle = string.replace(bill_intro['sDesc'],"\<br\>.*\<br\>","")
	question_sArticle = string.trim(question_sArticle) //清除多余的空格和回车
	question_sArticle = string.replace(init("viewtpl"),"<{#REPLACEMENT#}>",question_sArticle)
	//工单截图
	var question_sPicture = string.match(bill_intro['sDesc'], "\<img.*\>")
	if(question_sPicture === null){ question_sPicture = "" } else { question_sPicture = "<br>" + question_sPicture }
	//显示工单内容
	viewfrm.write(question_sTitle ++ question_sArticle ++ question_sPicture)
	
	return {true; "OK_LAST_BILL_INFO"};
}

//显示窗体并自动查询
mainForm.show()
mainForm.btn_query.oncommand()

//进入消息循环
win.loopMessage();
